{"version":3,"sources":["webpack://gatsby-personal-site/./src/templates/tag.tsx"],"names":["data","tag","pageContext","siteTitle","site","siteMetadata","title","works","allMarkdownRemark","edges","keywords","normalVelocity","containerOpacity","addEventListeners","type","content"],"mappings":"iNA6HA,UA5GqC,SAAC,GAAyB,IAAxBA,EAAuB,EAAvBA,KAC9BC,EADqD,EAAjBC,YACpCD,IACDE,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAgBP,EAAKQ,kBAAkBC,MAE7C,OACE,gBAAC,IAAD,CAAQH,MAAOH,GACb,gBAAC,IAAD,CACEG,MAAK,iBAAmBL,EAAnB,IACLS,SAAU,CAAC,OAAD,0DASZ,gBAAC,IAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,gBAAC,IAAD,KACE,+BACE,gBAAC,KAAD,KACE,gBAAC,KAAD,qBAAqBZ,IAEvB,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAsBa,MAAM,EAAMC,QAASR","file":"component---src-templates-tag-tsx-d873fc5846013d61fddb.js","sourcesContent":["import React from 'react'\nimport {graphql} from 'gatsby'\nimport Layout from '../components/Layout'\nimport Head from '../components/Head'\nimport Stars from '../components/Stars'\nimport Content from '../components/Content'\nimport {ContentListContainer} from '../components/ContentList'\nimport {Header, Title, Section, SectionBody} from '../styles'\nimport {Work} from '../types'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    tag: string\n  }\n}\n\nconst TagTemplate: React.FC<Props> = ({data, pageContext}) => {\n  const {tag} = pageContext\n  const siteTitle = data.site.siteMetadata.title\n  const works: Work[] = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title={`Posts tagged \"${tag}\"`}\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <article>\n          <Header>\n            <Title>Works tagged {tag}</Title>\n          </Header>\n          <Section>\n            <SectionBody>\n              <ContentListContainer type={true} content={works} />\n            </SectionBody>\n          </Section>\n        </article>\n      </Content>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        id: string\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n          description: string\n          tags: string[]\n          type: string\n          url: string\n          featuredImage: any\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            description\n            tags\n            type\n            url\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagTemplate\n"],"sourceRoot":""}