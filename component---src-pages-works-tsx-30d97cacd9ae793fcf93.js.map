{"version":3,"sources":["webpack://gatsby-personal-site/./src/components/Works/Works.tsx","webpack://gatsby-personal-site/./src/components/Works/index.ts","webpack://gatsby-personal-site/./src/components/Works/WorksContainer.tsx","webpack://gatsby-personal-site/./src/pages/works.tsx"],"names":["SectionHeader","styled","SectionTitle","props","theme","fontSizes","mediumLarge","fontWeights","regular","MoreLink","Link","colors","light","normal","bold","darkest","posts","projects","to","ContentList","content","data","useStaticQuery","allMarkdownRemark","edges","filter","work","node","frontmatter","type","slice","siteTitle","site","siteMetadata","title","Layout","Head","keywords","Stars","normalVelocity","containerOpacity","addEventListeners","Content"],"mappings":"2QAOMA,EAAgBC,oBAAH,4DAAGA,CAAH,wDAMbC,EAAeD,mBAAH,2DAAGA,CAAH,oCACH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,eAC7B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,WAG5CC,GAAWR,QAAOS,QAAV,kEAAGT,CAAH,iUACH,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,SACjB,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,MAAQ,QAC3C,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,UAAUQ,UAC7B,SAAAV,GAAK,OAAIA,EAAMC,MAAMG,YAAYO,QAarC,SAAAX,GAAK,OAAIA,EAAMC,MAAMO,OAAOI,WACjB,SAAAZ,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,SAuCpD,EA7BoC,SAAC,GAAD,IAAEI,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAClC,gCACE,gBAAC,KAAD,KACE,gBAAC,KAAD,cACA,gBAAC,KAAD,mCAEF,gBAAC,KAAD,KACE,gBAACjB,EAAD,KACE,gBAACE,EAAD,qBACA,gBAACO,EAAD,CAAUS,GAAG,SAAb,aACA,gBAACT,EAAD,CAAUS,GAAG,SAAb,aAEF,gBAAC,KAAD,KACE,gBAACC,EAAA,EAAD,CAAsBC,QAASJ,MAGnC,gBAAC,KAAD,KACE,gBAAChB,EAAD,KACE,gBAACE,EAAD,wBACA,gBAACO,EAAD,CAAUS,GAAG,aAAb,gBACA,gBAACT,EAAD,CAAUS,GAAG,SAAb,aAEF,gBAAC,KAAD,KACE,gBAACC,EAAA,EAAD,CAAsBC,QAASH,QCnEvC,ECGiC,WAC/B,IAAMI,GAAOC,oBAAe,cAkCtBN,EAAQK,EAAKE,kBAAkBC,MAClCC,QAAO,SAACC,GAAD,MAA+C,SAA/BA,EAAKC,KAAKC,YAAYC,QAC7CC,MAAM,EAAG,GAENb,EAAWI,EAAKE,kBAAkBC,MACrCC,QAAO,SAACC,GAAD,MAA+C,YAA/BA,EAAKC,KAAKC,YAAYC,QAC7CC,MAAM,EAAG,GAEZ,OAAO,gBAAC,EAAD,CAAOd,MAAOA,EAAOC,SAAUA,KCCxC,EApC4C,SAAC,GAAY,IACjDc,EADgD,EAAVV,KACrBW,KAAKC,aAAaC,MAEzC,OACE,gBAACC,EAAA,EAAD,CAAQD,MAAOH,GACb,gBAACK,EAAA,EAAD,CACEF,MAAM,OACNG,SAAU,CAAC,OAAD,0DASZ,gBAACC,EAAA,EAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD","file":"component---src-pages-works-tsx-30d97cacd9ae793fcf93.js","sourcesContent":["import React from 'react'\nimport {Description, Header, Section, SectionBody, Title} from '../../styles'\nimport {ContentListContainer} from '../ContentList'\nimport {Work} from '../../types'\nimport styled from 'styled-components'\nimport {Link} from 'gatsby'\n\nconst SectionHeader = styled.div`\n  padding-left: 1rem;\n  display: flex;\n  align-items: center;\n`\n\nconst SectionTitle = styled.h2`\n  font-size: ${props => props.theme.fontSizes.mediumLarge};\n  font-weight: ${props => props.theme.fontWeights.regular};\n`\n\nconst MoreLink = styled(Link)`\n  color: ${props => props.theme.colors.light};\n  background-color: ${props => props.theme.colors.light + '40'};\n  font-size: ${props => props.theme.fontSizes.normal};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  border-radius: 5px;\n  box-sizing: border-box;\n  text-decoration: none;\n  display: block;\n  padding: 0.4rem 0.6rem;\n  border-bottom: 0;\n  white-space: nowrap;\n  line-height: 1;\n  margin: 0.2rem 0 0.2rem 1rem;\n  transition: 0.4s ease;\n\n  &:hover {\n    color: ${props => props.theme.colors.darkest};\n    background-color: ${props => props.theme.colors.light};\n    border-bottom: none;\n  }\n`\n\ninterface WorksProps {\n  posts: Work[]\n  projects: Work[]\n}\n\nconst Works: React.FC<WorksProps> = ({posts, projects}) => (\n  <>\n    <Header>\n      <Title>Works</Title>\n      <Description>What I do and write about</Description>\n    </Header>\n    <Section>\n      <SectionHeader>\n        <SectionTitle>Latest posts</SectionTitle>\n        <MoreLink to=\"/blog\">All posts</MoreLink>\n        <MoreLink to=\"/tags\">All tags</MoreLink>\n      </SectionHeader>\n      <SectionBody>\n        <ContentListContainer content={posts} />\n      </SectionBody>\n    </Section>\n    <Section>\n      <SectionHeader>\n        <SectionTitle>Latest projects</SectionTitle>\n        <MoreLink to=\"/projects\">All projects</MoreLink>\n        <MoreLink to=\"/tags\">All tags</MoreLink>\n      </SectionHeader>\n      <SectionBody>\n        <ContentListContainer content={projects} />\n      </SectionBody>\n    </Section>\n  </>\n)\n\nexport default Works\n","import WorksContainer from './WorksContainer'\n\nexport default WorksContainer\n","import React from 'react'\nimport Works from './Works'\nimport {Work} from '../../types'\nimport {graphql, useStaticQuery} from 'gatsby'\n\nconst WorksContainer: React.FC = () => {\n  const data = useStaticQuery(graphql`\n    query WorksQuery {\n      allMarkdownRemark(\n        filter: {frontmatter: {published: {ne: false}}}\n        sort: {fields: [frontmatter___date], order: DESC}\n      ) {\n        edges {\n          node {\n            id\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMM DD, YYYY\")\n              title\n              description\n              tags\n              type\n              url\n              featuredImage {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.edges\n    .filter((work: Work) => work.node.frontmatter.type === 'post')\n    .slice(0, 3)\n\n  const projects = data.allMarkdownRemark.edges\n    .filter((work: Work) => work.node.frontmatter.type === 'project')\n    .slice(0, 3)\n\n  return <Works posts={posts} projects={projects} />\n}\n\nexport default WorksContainer\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Head from '../components/Head'\nimport Layout from '../components/Layout'\nimport Stars from '../components/Stars'\nimport Content from '../components/Content'\nimport Works from '../components/Works'\nimport {TitlePageQueryData} from '../types'\n\ninterface WorksPageProps {\n  readonly data: TitlePageQueryData\n}\n\nconst WorksPage: React.FC<WorksPageProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <Works />\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...SiteTitle\n    }\n  }\n`\n\nexport default WorksPage\n"],"sourceRoot":""}